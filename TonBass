package loopExperiment;

import javax.sound.sampled.AudioFormat;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.SourceDataLine;

public class TonBass {


    public void playBass1() throws LineUnavailableException, InterruptedException {
        for (int x = 0; x < 10; x++) {
            byte[] buf2 = new byte[1];

            AudioFormat af2 = new AudioFormat((float) 45000, 8, 1, true, false);
            SourceDataLine sd2 = AudioSystem.getSourceDataLine(af2);
            sd2.open();
            sd2.start();
            for (int i = 0; i < 1000 * (float) 44100 / 1000; i++) {
                double angle = i / ((float) 44100 / 100) * 1.5 * Math.PI;
                buf2[0] = (byte) (Math.sin(angle) * 100);
                sd2.write(buf2, 0, 1);
            }

            sd2.drain();
            sd2.stop();

            try {
                Thread.sleep(10);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
    }

    public void playBass2() throws LineUnavailableException, InterruptedException {
        for (int x = 0; x < 10; x++) {
            byte[] buf2 = new byte[1];

            AudioFormat af2 = new AudioFormat((float) 45000, 8, 1, true, false);
            SourceDataLine sd2 = AudioSystem.getSourceDataLine(af2);
            sd2.open();
            sd2.start();
            for (int i = 0; i < 1000 * (float) 44100 / 1000; i++) {
                double angle = i / ((float) 44100 / 100) * 1.7 * Math.PI;
                buf2[0] = (byte) (Math.sin(angle) * 100);
                sd2.write(buf2, 0, 1);
            }

            sd2.drain();
            sd2.stop();

            try {
                Thread.sleep(10);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
    }
}
